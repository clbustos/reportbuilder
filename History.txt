=== 1.4.1 / 2011-02-03
* Add generic ReportBuilder#save method, to save according to extension
* Better titles layout on PDF.
* Pages could be numbered on PDF
* Small fixed on docs
* Test works on Ruby 1.9.3

=== 1.4.0 / 2010-11-26
* Basic support for pdf creation, using Prawn. SVG insertion could be realized using Prawn-svg (as vectors) or Rmagick (as bitmap)
* Added SimpleCov support

=== 1.3.0 / 2010-11-24
* Implemented loading of images via blobs and filenames.
* SVG are converted to raster before inserted of RTFs
* First (almost) complete support for Graph API on jqPlot and Flot. Test for Graph and jqPlot wrapper for html

=== 1.2.5 / 2010-04-30
* Changed dependency on clbustos-rtf to 0.3.0

=== 1.2.4 / 2010-04-30
* Bug fix on Rtf Builder for tables. Creation of hr generates an error

=== 1.2.3 / 2010-04-13
* Source code repository moved to http://github.com/clbustos/reportbuilder

=== 1.2.2 / 2010-04-06
* Bug fix: Table should be parsed with #preformatted, not #text on Text output

=== 1.2.1 / 2010-03-29
* ReportBuilder#add returns self, to create chain of adds
* Changes on documentation, replacing Generator for Builder

=== 1.2.0 / 2010-03-28
*ReporBuilder::Table 
  * Colspans works as expected on Html and Text. On Rtf the cells doesn't merge, because ruby-rtf doesn't support it.
  * Better tests for Html and Text.
* Classes related to Generator renamed to Builder, because these correspond to Builder pattern
* Flexible codes for formats. You could use :text or :txt as :format for ReportBuilder#generate. See ReportBuilder::Builder.code for more information

=== 1.1.1 / 2010-03-24
* Test suite replaces Test::Unit for Test::MiniUnit and Hpricot for Nokogiri
* Bug fix: rtf generator doesn't accept a ReportBuilder::Image object
* Improved output for rtf on tables and headers of sections
* More documentation

=== 1.1.0 / 2010-03-23
* Added rtf support
=== 1.0.0 / 2010-03-22
Change of API:
 * Deleted "add_" before methods
 * Massive use of block after functions, to allow easy creation of reports
For example, you can create
    ReportBuilder.generate(:name=>"Report 1", :format=>:html) do
        text("A paragraph")
        preformatted("a pre statement")
        
    end
=== 1.0.0 / 2009-08-12

* 1 major enhancement

  * Birthday!

